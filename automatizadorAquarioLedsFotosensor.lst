;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26/04/2021 17:36:57
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x289D      	GOTO       157
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AD      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AE      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;main.c,38 :: 		void interrupt(){
;main.c,39 :: 		if (TMR1IF_bit){
0x000B	0x1C0C      	BTFSS      TMR1IF_bit, BitPos(TMR1IF_bit+0)
0x000C	0x280F      	GOTO       L_interrupt0
;main.c,40 :: 		resetTMR1();
0x000D	0x2095      	CALL       _resetTMR1
;main.c,41 :: 		ms++;
0x000E	0x0AA1      	INCF       _ms, 1
;main.c,42 :: 		}
L_interrupt0:
;main.c,43 :: 		}
L_end_interrupt:
L__interrupt13:
0x000F	0x082E      	MOVF       ___savePCLATH, 0
0x0010	0x008A      	MOVWF      PCLATH
0x0011	0x0E2D      	SWAPF      ___saveSTATUS, 0
0x0012	0x0083      	MOVWF      STATUS
0x0013	0x0EFF      	SWAPF      R15, 1
0x0014	0x0E7F      	SWAPF      R15, 0
0x0015	0x0009      	RETFIE
; end of _interrupt
_configTMR1:
;main.c,21 :: 		void configTMR1(void){
;main.c,22 :: 		T1CON	        = 0x31;
0x0016	0x3031      	MOVLW      49
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x0090      	MOVWF      T1CON
;main.c,23 :: 		TMR1IF_bit	= 0;
0x001A	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;main.c,24 :: 		TMR1H	        = 0x0B;
0x001B	0x300B      	MOVLW      11
0x001C	0x008F      	MOVWF      TMR1H
;main.c,25 :: 		TMR1L	        = 0xDC;
0x001D	0x30DC      	MOVLW      220
0x001E	0x008E      	MOVWF      TMR1L
;main.c,26 :: 		TMR1IE_bit	= 1;
0x001F	0x1683      	BSF        STATUS, 5
0x0020	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;main.c,28 :: 		GIE_bit       = 1;
0x0021	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;main.c,29 :: 		PEIE_bit      = 1;
0x0022	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;main.c,30 :: 		}
L_end_configTMR1:
0x0023	0x0008      	RETURN
; end of _configTMR1
_read24hValues:
;main.c,45 :: 		void read24hValues(void){
;main.c,46 :: 		configTMR1();
0x0024	0x2016      	CALL       _configTMR1
;main.c,48 :: 		while(hour < 24){
L_read24hValues1:
0x0025	0x3018      	MOVLW      24
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x0224      	SUBWF      _hour, 0
0x0028	0x1803      	BTFSC      STATUS, 0
0x0029	0x283D      	GOTO       L_read24hValues2
;main.c,49 :: 		if(ms >= 4){
0x002A	0x3004      	MOVLW      4
0x002B	0x0221      	SUBWF      _ms, 0
0x002C	0x1C03      	BTFSS      STATUS, 0
0x002D	0x2830      	GOTO       L_read24hValues3
;main.c,50 :: 		ms = 0;
0x002E	0x01A1      	CLRF       _ms
;main.c,51 :: 		sec++;
0x002F	0x0AA2      	INCF       _sec, 1
;main.c,52 :: 		}
L_read24hValues3:
;main.c,53 :: 		if(sec >= 60){
0x0030	0x303C      	MOVLW      60
0x0031	0x0222      	SUBWF      _sec, 0
0x0032	0x1C03      	BTFSS      STATUS, 0
0x0033	0x2836      	GOTO       L_read24hValues4
;main.c,54 :: 		sec = 0;
0x0034	0x01A2      	CLRF       _sec
;main.c,55 :: 		minute++;
0x0035	0x0AA3      	INCF       _minute, 1
;main.c,56 :: 		}
L_read24hValues4:
;main.c,57 :: 		if(minute >= 60){
0x0036	0x303C      	MOVLW      60
0x0037	0x0223      	SUBWF      _minute, 0
0x0038	0x1C03      	BTFSS      STATUS, 0
0x0039	0x283C      	GOTO       L_read24hValues5
;main.c,58 :: 		minute = 0;
0x003A	0x01A3      	CLRF       _minute
;main.c,59 :: 		hour++;
0x003B	0x0AA4      	INCF       _hour, 1
;main.c,61 :: 		}
L_read24hValues5:
;main.c,62 :: 		}
0x003C	0x2825      	GOTO       L_read24hValues1
L_read24hValues2:
;main.c,63 :: 		}
L_end_read24hValues:
0x003D	0x0008      	RETURN
; end of _read24hValues
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x1303      	BCF        STATUS, 6
0x0040	0x082F      	MOVF       FARG_EEPROM_Read_Address, 0
0x0041	0x1703      	BSF        STATUS, 6
0x0042	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x0043	0x1683      	BSF        STATUS, 5
0x0044	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x0045	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x080C      	MOVF       EEDATA, 0
0x0048	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x0049	0x0008      	RETURN
; end of _EEPROM_Read
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x1303      	BCF        STATUS, 6
0x004C	0x0829      	MOVF       ___DoICPAddr+1, 0
0x004D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x004E	0x0828      	MOVF       ___DoICPAddr, 0
0x004F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0050	0x0008      	RETURN
; end of _____DoICP
_ADC_Init:
;__Lib_ADC_A_C.c,19 :: 		
;__Lib_ADC_A_C.c,20 :: 		
0x0051	0x30FF      	MOVLW      _ADC_Get_Sample
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x1303      	BCF        STATUS, 6
0x0054	0x00A5      	MOVWF      _ADC_Get_Sample_Ptr
0x0055	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x0056	0x00A6      	MOVWF      _ADC_Get_Sample_Ptr+1
0x0057	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x0058	0x00A7      	MOVWF      _ADC_Get_Sample_Ptr+2
0x0059	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.c,22 :: 		
0x005A	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,23 :: 		
0x005B	0x30C0      	MOVLW      192
0x005C	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,24 :: 		
0x005D	0x0920      	COMF       _vref_mask, 0
0x005E	0x00F0      	MOVWF      R0
0x005F	0x0870      	MOVF       R0, 0
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,25 :: 		
0x0062	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,26 :: 		
0x0063	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,29 :: 		
0x0064	0x1283      	BCF        STATUS, 5
0x0065	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,30 :: 		
L_end_ADC_Init:
0x0066	0x0008      	RETURN
; end of _ADC_Init
_updatingEepromData:
;main.c,65 :: 		void updatingEepromData(void){
;main.c,66 :: 		quant_values_eeprom = EEPROM_Read(QUANT_VALUE_EEPROM);
0x0067	0x3001      	MOVLW      1
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x1303      	BCF        STATUS, 6
0x006A	0x00AF      	MOVWF      FARG_EEPROM_Read_Address
0x006B	0x203E      	CALL       _EEPROM_Read
0x006C	0x0870      	MOVF       R0, 0
0x006D	0x00AA      	MOVWF      _quant_values_eeprom
;main.c,67 :: 		read_control_led    = EEPROM_Read(READ_CONTROL_LED);
0x006E	0x3002      	MOVLW      2
0x006F	0x00AF      	MOVWF      FARG_EEPROM_Read_Address
0x0070	0x203E      	CALL       _EEPROM_Read
0x0071	0x0870      	MOVF       R0, 0
0x0072	0x00AB      	MOVWF      _read_control_led
;main.c,68 :: 		last_value_eeprom   = EEPROM_Read(LAST_POSITION_EEPROM);
0x0073	0x301A      	MOVLW      26
0x0074	0x00AF      	MOVWF      FARG_EEPROM_Read_Address
0x0075	0x203E      	CALL       _EEPROM_Read
0x0076	0x0870      	MOVF       R0, 0
0x0077	0x00AC      	MOVWF      _last_value_eeprom
;main.c,70 :: 		if(read_control_led)
0x0078	0x082B      	MOVF       _read_control_led, 0
0x0079	0x1903      	BTFSC      STATUS, 2
0x007A	0x287C      	GOTO       L_updatingEepromData6
;main.c,71 :: 		return;
0x007B	0x287D      	GOTO       L_end_updatingEepromData
L_updatingEepromData6:
;main.c,73 :: 		read24hValues();
0x007C	0x2024      	CALL       _read24hValues
;main.c,74 :: 		}
L_end_updatingEepromData:
0x007D	0x0008      	RETURN
; end of _updatingEepromData
_initializePic:
;main.c,76 :: 		void initializePic(void){
;main.c,77 :: 		TRISA = 0x11111111;
0x007E	0x3011      	MOVLW      17
0x007F	0x1683      	BSF        STATUS, 5
0x0080	0x1303      	BCF        STATUS, 6
0x0081	0x0085      	MOVWF      TRISA
;main.c,78 :: 		TRISB = 0x00000000;
0x0082	0x0186      	CLRF       TRISB
;main.c,79 :: 		PORTA = 0x00000000;
0x0083	0x1283      	BCF        STATUS, 5
0x0084	0x0185      	CLRF       PORTA
;main.c,80 :: 		PORTB = 0x00000000;
0x0085	0x0186      	CLRF       PORTB
;main.c,82 :: 		ADC_Init();
0x0086	0x2051      	CALL       _ADC_Init
;main.c,83 :: 		updatingEepromData();
0x0087	0x2067      	CALL       _updatingEepromData
;main.c,84 :: 		}
L_end_initializePic:
0x0088	0x0008      	RETURN
; end of _initializePic
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0089	0x204A      	CALL       _____DoICP
0x008A	0x118A      	BCF        PCLATH, 3
0x008B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x008C	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x008D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x008E	0x0AA8      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x008F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0090	0x0AA9      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0091	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0092	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0093	0x2889      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0094	0x0008      	RETURN
; end of ___CC2DW
_resetTMR1:
;main.c,32 :: 		void resetTMR1(void){
;main.c,33 :: 		TMR1IF_bit = 0;
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x1303      	BCF        STATUS, 6
0x0097	0x100C      	BCF        TMR1IF_bit, BitPos(TMR1IF_bit+0)
;main.c,34 :: 		TMR1H	 = 0x0B;
0x0098	0x300B      	MOVLW      11
0x0099	0x008F      	MOVWF      TMR1H
;main.c,35 :: 		TMR1L	 = 0xDC;
0x009A	0x30DC      	MOVLW      220
0x009B	0x008E      	MOVWF      TMR1L
;main.c,36 :: 		}
L_end_resetTMR1:
0x009C	0x0008      	RETURN
; end of _resetTMR1
_main:
0x009D	0x20AC      	CALL       172
;main.c,86 :: 		void main(void){
;main.c,87 :: 		initializePic();
0x009E	0x207E      	CALL       _initializePic
;main.c,89 :: 		while(1){
L_main7:
;main.c,91 :: 		}
0x009F	0x289F      	GOTO       L_main7
;main.c,92 :: 		}
L_end_main:
0x00A0	0x28A0      	GOTO       $+0
; end of _main
0x00AC	0x3020      	MOVLW      32
0x00AD	0x0084      	MOVWF      FSR
0x00AE	0x3005      	MOVLW      5
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x1303      	BCF        STATUS, 6
0x00B1	0x00F0      	MOVWF      R0
0x00B2	0x30A6      	MOVLW      166
0x00B3	0x00A8      	MOVWF      ___DoICPAddr
0x00B4	0x3000      	MOVLW      0
0x00B5	0x00A9      	MOVWF      41
0x00B6	0x2089      	CALL       137
0x00B7	0x0008      	RETURN
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x00A6	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;main.c,0 :: ?ICS_ms
0x00A7	0x3400 ;?ICS_ms+0
; end of ?ICS_ms
;main.c,0 :: ?ICS_sec
0x00A8	0x3400 ;?ICS_sec+0
; end of ?ICS_sec
;main.c,0 :: ?ICS_minute
0x00A9	0x3400 ;?ICS_minute+0
; end of ?ICS_minute
;main.c,0 :: ?ICS_hour
0x00AA	0x3400 ;?ICS_hour+0
; end of ?ICS_hour
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [18]    _interrupt
0x0016      [14]    _configTMR1
0x0024      [26]    _read24hValues
0x003E      [12]    _EEPROM_Read
0x004A       [7]    _____DoICP
0x0051      [22]    _ADC_Init
0x0067      [23]    _updatingEepromData
0x007E      [11]    _initializePic
0x0089      [12]    ___CC2DW
0x0095       [8]    _resetTMR1
0x009D       [3]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000C       [0]    TMR1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x001F       [1]    ADCON0
0x0020       [1]    _vref_mask
0x0021       [1]    _ms
0x0022       [1]    _sec
0x0023       [1]    _minute
0x0024       [1]    _hour
0x0025       [3]    _ADC_Get_Sample_Ptr
0x0028       [2]    ___DoICPAddr
0x002A       [1]    _quant_values_eeprom
0x002B       [1]    _read_control_led
0x002C       [1]    _last_value_eeprom
0x002D       [1]    ___saveSTATUS
0x002E       [1]    ___savePCLATH
0x002F       [1]    FARG_EEPROM_Read_Address
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x008C       [0]    TMR1IE_bit
0x009F       [1]    ADCON1
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x018C       [1]    EECON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x00A6       [1]    ?ICS_vref_mask
0x00A7       [1]    ?ICS_ms
0x00A8       [1]    ?ICS_sec
0x00A9       [1]    ?ICS_minute
0x00AA       [1]    ?ICS_hour
